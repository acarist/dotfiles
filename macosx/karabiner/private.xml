<?xml version="1.0"?>
<root>
    <!-- Application URLs -->
    <vkopenurldef>
        <name>KeyCode::VK_OPEN_URL_APP_Atom</name>
        <url type="file">/Applications/Atom Beta.app</url>
    </vkopenurldef>
    <vkopenurldef>
        <name>KeyCode::VK_OPEN_URL_APP_Chrome</name>
        <url type="file">/Applications/Google Chrome.app</url>
    </vkopenurldef>
    <vkopenurldef>
        <name>KeyCode::VK_OPEN_URL_APP_iTerm</name>
        <url type="file">/Applications/iTerm.app</url>
    </vkopenurldef>
    <vkopenurldef>
        <name>KeyCode::VK_OPEN_URL_APP_Mailplane</name>
        <url type="file">/Applications/Mailplane 3.app</url>
    </vkopenurldef>
    <vkopenurldef>
        <name>KeyCode::VK_OPEN_URL_APP_Slack</name>
        <url type="file">/Applications/Slack.app</url>
    </vkopenurldef>
    <vkopenurldef>
        <name>KeyCode::VK_OPEN_URL_APP_TaskPaper</name>
        <url type="file">/Applications/TaskPaper.app</url>
    </vkopenurldef>

    <replacementdef>
        <replacementname>KEYBOARD_KARABINER_EXT_PATH</replacementname>
        <replacementvalue>{{ ENV_HOME }}/Library/Application\ Support/Karabiner/ext</replacementvalue>
    </replacementdef>
    <replacementdef>
        <replacementname>VERIFY_AND_EXECUTE_EXTENSION</replacementname>
        <replacementvalue>
            <![CDATA[
            function verify_extension_exists {
            if [ ! -x "$1" ]; then
            osascript -e "display alert \"Karabiner extension not found\" message \"Please verify that the symlinks are set up as described in the README:\n\nhttps://github.com/jasonrudolph/keyboard/blob/master/README.md\" as critical"
            exit 1
            fi
            }

            function verify_and_execute_extension {
            EXTENSION="$1"
            EXTENSION_ARG=$2

            # verify
            verify_extension_exists "$EXTENSION"

            # execute
            "$EXTENSION" "$EXTENSION_ARG"
            }

            verify_and_execute_extension \]]>
        </replacementvalue>
    </replacementdef>

    <item>
        <!--
      Inspired by and adapted from Steve Losh's "Modern Space Cadet" post:
      http://stevelosh.com/blog/2012/10/a-modern-space-cadet/#controlescape
    -->
    <name>F19 to Escape/Control</name>
    <appendix>Tap F19 for Escape; Hold F19 for Control</appendix>
    <appendix>(Recommendation: Use Seil to remap Caps Lock to F19.)</appendix>
    <identifier>com.jasonrudolph.f192f19_escape_or_control</identifier>
    <autogen>
        --KeyOverlaidModifier--
        KeyCode::F19,
        KeyCode::CONTROL_L,
        KeyCode::ESCAPE
    </autogen>
</item>

<item>
    <name>Double-tap Left Shift for CapsLock</name>
    <identifier>com.jasonrudolph.double_lshift_to_caps</identifier>
    <autogen>__DoublePressModifier__ KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::CAPSLOCK</autogen>
</item>

<item>
    <!--
      Inspired by and adapted from Steve Losh's "Modern Space Cadet" post:
      http://stevelosh.com/blog/2012/10/a-modern-space-cadet/#hyper
    -->
    <name>Hyper Mode</name>
    <item>
        <appendix>OS X doesn't have a native Hyper key. Let's define Hyper as Control+Shift+Option+Command.</appendix>
        <appendix>With a new modifier key defined, we open a whole world of possibilities.</appendix>
    </item>

    <!--
      "ModifierFlag::OPTION_R | ModifierFlag::NONE" causes this remapping to
      fire *only* when the the right option key is used *without* any other
      modifiers.
      See http://pqrs.org/macosx/keyremap4macbook/xml-basic.html.en#modifierflag-none
    -->
    <item>
        <name>Right Option to Hyper</name>
        <identifier>com.jasonrudolph.right_option_hyper</identifier>
        <autogen>
            __KeyToKey__
            KeyCode::OPTION_R, ModifierFlag::OPTION_R | ModifierFlag::NONE,
            KeyCode::COMMAND_L, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
        </autogen>
    </item>

    <item>
        <name>Hyper+A to open iTunes ("A" for "Apple Music")</name>
        <identifier>com.jasonrudolph.hyper_a</identifier>
        <autogen>
            __KeyToKey__
            KeyCode::A, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
            KeyCode::VK_OPEN_URL_APP_iTunes,
        </autogen>
    </item>

    <item>
        <name>Hyper+B to open Chrome ("B" for "Browser")</name>
        <identifier>com.jasonrudolph.hyper_b</identifier>
        <autogen>
            __KeyToKey__
            KeyCode::B, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
            KeyCode::VK_OPEN_URL_APP_Chrome,
        </autogen>
    </item>

    <item>
        <name>Hyper+C to open Slack ("C" for "Chat")</name>
        <identifier>com.jasonrudolph.hyper_c</identifier>
        <autogen>
            __KeyToKey__
            KeyCode::C, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
            KeyCode::VK_OPEN_URL_APP_Slack,
        </autogen>
    </item>

    <item>
        <name>Hyper+D to open TaskPaper ("D" for "Do!" ... or Done!")</name>
        <identifier>com.jasonrudolph.hyper_d</identifier>
        <autogen>
            __KeyToKey__
            KeyCode::D, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
            KeyCode::VK_OPEN_URL_APP_TaskPaper,
        </autogen>
    </item>

    <item>
        <name>Hyper+E to open Atom ("E" for "Editor")</name>
        <identifier>com.jasonrudolph.hyper_e</identifier>
        <autogen>
            __KeyToKey__
            KeyCode::E, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
            KeyCode::VK_OPEN_URL_APP_Atom,
        </autogen>
    </item>

    <item>
        <name>Hyper+F to open Finder ("F" for "Finder")</name>
        <identifier>com.jasonrudolph.hyper_f</identifier>
        <autogen>
            __KeyToKey__
            KeyCode::F, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
            KeyCode::VK_OPEN_URL_APP_Finder,
        </autogen>
    </item>

    <item>
        <name>Hyper+G to open Mailplane ("G" for "Gmail")</name>
        <identifier>com.jasonrudolph.hyper_g</identifier>
        <autogen>
            __KeyToKey__
            KeyCode::G, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
            KeyCode::VK_OPEN_URL_APP_Mailplane,
        </autogen>
    </item>

    <item>
        <name>Hyper+T to open iTerm ("T" for "Terminal")</name>
        <identifier>com.jasonrudolph.hyper_t</identifier>
        <autogen>
            __KeyToKey__
            KeyCode::T, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
            KeyCode::VK_OPEN_URL_APP_iTerm,
        </autogen>
    </item>
</item>

<vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_SHELL_open_selected_url</name>
    <url type="shell">yy
        <![CDATA[
        {{ VERIFY_AND_EXECUTE_EXTENSION }} {{ KEYBOARD_KARABINER_EXT_PATH }}/open_selected_url
        ]]>
    </url>
</vkopenurldef>

<item>
    <name>Option+O to open currently-selected text as URL</name>
    <identifier>com.jasonrudolph.option_with_o_to_open_selected_url</identifier>
    <autogen>
        __KeyToKey__
        KeyCode::O, ModifierFlag::OPTION_L | ModifierFlag::NONE,
        KeyCode::VK_OPEN_URL_SHELL_open_selected_url
    </autogen>
</item>

<item>
    <!--
      I prefer to use Control+H/J/K/L to move left/up/down/right by one pane in
      all multi-pane apps (e.g., iTerm, various editors). That's convenient and
      consistent, but it conflicts with the default binding for deleting to the
      end of the line (i.e., Control+K). To maintain that very useful
      functionality, and to keep it on the home row, this item binds Control+;
      to delete to the end of the line.
    -->
    <name>Control+; to delete to end of line</name>
    <identifier>com.jasonrudolph.control_with_semicolon_to_delete_to_end_of_line</identifier>
    <block>
        <not>TERMINAL</not>
        <autogen>
            __KeyToKey__
            KeyCode::SEMICOLON, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::NONE,
            KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::FORWARD_DELETE
        </autogen>
    </block>
    <block>
        <only>TERMINAL</only>
        <autogen>
            __KeyToKey__
            KeyCode::SEMICOLON, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::NONE,
            KeyCode::K, ModifierFlag::CONTROL_L,
            Option::NOREPEAT
        </autogen>
    </block>
</item>

<item>
    <name>Option+H/L to delete previous/next word in iTerm 2 (and Terminal)</name>
    <identifier>com.jasonrudolph.terminal.option_with_h_or_l_to_delete_previous_word_or_next_word</identifier>
    <only>TERMINAL</only>

    <!--
      "ModifierFlag::OPTION_L | ModifierFlag::NONE" causes this remapping to
      fire *only* when the the left option key is used *without* any other
      modifiers.
      See http://pqrs.org/macosx/keyremap4macbook/xml-basic.html.en#modifierflag-none
    -->
    <autogen>
        __KeyToKey__
        KeyCode::H, ModifierFlag::OPTION_L | ModifierFlag::NONE,
        KeyCode::W, ModifierFlag::CONTROL_L
    </autogen>
    <autogen>
        __KeyToKey__
        KeyCode::L, ModifierFlag::OPTION_L | ModifierFlag::NONE,
        KeyCode::ESCAPE,
        KeyCode::D
    </autogen>
</item>

<item>
    <name>Option+H/L to delete previous/next word</name>
    <identifier>com.jasonrudolph.option_with_h_or_l_to_delete_previous_word_or_next_word</identifier>

    <!--
      "ModifierFlag::OPTION_L | ModifierFlag::NONE" causes this remapping to
      fire *only* when the the left option key is used *without* any other
      modifiers.
      See http://pqrs.org/macosx/keyremap4macbook/xml-basic.html.en#modifierflag-none
    -->
    <autogen>
        __KeyToKey__
        KeyCode::H, ModifierFlag::OPTION_L | ModifierFlag::NONE,
        KeyCode::DELETE, ModifierFlag::OPTION_L
    </autogen>
    <autogen>
        __KeyToKey__
        KeyCode::L, ModifierFlag::OPTION_L | ModifierFlag::NONE,
        KeyCode::FORWARD_DELETE, ModifierFlag::OPTION_L
    </autogen>
</item>

<item>
    <name>Control+dash/pipe to split iTerm2 panes horizontally/vertically</name>
    <identifier>com.jasonrudolph.iterm.control_with_dash_or_pipe_to_split_pane</identifier>
    <only>TERMINAL</only>
    <autogen>
        __KeyToKey__
        KeyCode::MINUS, ModifierFlag::CONTROL_L,
        KeyCode::D, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L
    </autogen>
    <autogen>
        __KeyToKey__
        KeyCode::BACKSLASH, ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
        KeyCode::D, ModifierFlag::COMMAND_L | ModifierFlag::NONE
    </autogen>
</item>

<item>
    <name>Control+H/J/K/L to move left/up/down/right by one pane in iTerm 2</name>
    <identifier>com.jasonrudolph.iterm.control_with_h_or_j_or_k_or_l_to_move_between_panes</identifier>
    <only>TERMINAL</only>
    <autogen>
        __KeyToKey__
        KeyCode::H, ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L
    </autogen>
    <autogen>
        __KeyToKey__
        KeyCode::J, ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_DOWN, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L
    </autogen>
    <autogen>
        __KeyToKey__
        KeyCode::K, ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_UP, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L
    </autogen>
    <autogen>
        __KeyToKey__
        KeyCode::L, ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L
    </autogen>
</item>

<!--
    Adapted from the built-in "Simultaneous Vi Mode" option:
    https://github.com/tekezo/KeyRemap4MacBook/blob/6aa99ba/src/core/server/Resources/include/checkbox/simultaneouskeypresses_vi_mode.xml#L4
  -->
  <item>
      <name>(S)uper (D)uper Mode</name>
      <item>
          <name>What's (S)uper (D)uper Mode?</name>
          <identifier vk_config="true">notsave.com.jasonrudolph.simultaneouskeypresses_vimode</identifier>
          <autogen>__ShowStatusMessage__ (S)uper (D)uper Mode</autogen>

          <appendix>To activate, push S and D keys simultaneously and hold them down.</appendix>
          <appendix>Now you're in (S)uper (D)uper mode. It's like a secret keyboard _inside_ your keyboard. (Whoa.)</appendix>
          <appendix>It's optimized for keeping you on the home row, or very close to it.</appendix>
          <appendix>---</appendix>
          <appendix>Now you can:</appendix>
          <appendix>- Use H/J/K/L for Left/Down/Up/Right</appendix>
          <appendix>- Use F for Command</appendix>
          <appendix>- Use A for Option (AKA Alt)</appendix>
          <appendix>- Use Space for Shift</appendix>
          <appendix>- Use M to copy</appendix>
          <appendix>- Use , to paste</appendix>
          <appendix>- Use MM to copy current line</appendix>
          <appendix>- Use A+J/K for Page Down/Up</appendix>
          <appendix>- Use I/O to move left/right between tabs</appendix>
          <appendix>- Use U/P to go to the first/last tab (in most apps)</appendix>
          <appendix>- Use A+H/L to move to previous/next word in all apps (including iTerm 2)</appendix>

          <autogen>__KeyToKey__ KeyCode::A, KeyCode::OPTION_L</autogen>

          <block>
              <only>TERMINAL</only>
              <autogen>
                  --KeyToKey--
                  {{VI_H}}, VK_OPTION | ModifierFlag::NONE,
                  KeyCode::ESCAPE,
                  KeyCode::B
              </autogen>
              <autogen>
                  --KeyToKey--
                  {{VI_L}}, VK_OPTION | ModifierFlag::NONE,
                  KeyCode::ESCAPE,
                  KeyCode::F
              </autogen>
          </block>

          <!--
        By default, (S)uper (D)uper Mode maps A+J/K to Page Down/Up. The option
        below overrides the default (S)uper (D)uper Mode behavior to allow A+J/K
        to be used to navigate to the previous/next channel in Slack.
      -->
      <block>
          <config_only>com.jasonrudolph.simultaneouskeypresses_vimode.option.slack_jk</config_only>
          <only>Slack</only>
          <autogen>
              __KeyToKey__
              {{VI_J}}, VK_OPTION | ModifierFlag::NONE,
              KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L,
          </autogen>
          <autogen>
              --KeyToKey--
              {{VI_K}}, VK_OPTION | ModifierFlag::NONE,
              KeyCode::CURSOR_UP, ModifierFlag::OPTION_L,
          </autogen>
      </block>

      <autogen>
          __KeyToKey__
          {{VI_J}}, VK_OPTION | ModifierFlag::NONE,
          KeyCode::PAGEDOWN
      </autogen>
      <autogen>
          __KeyToKey__
          {{VI_K}}, VK_OPTION | ModifierFlag::NONE,
          KeyCode::PAGEUP
      </autogen>

      <autogen>__KeyToKey__ {{VI_H}}, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ {{VI_J}}, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ {{VI_K}}, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ {{VI_L}}, KeyCode::CURSOR_RIGHT</autogen>

      <autogen>__KeyToKey__ KeyCode::F, KeyCode::COMMAND_L</autogen>

      <autogen>__KeyToKey__ KeyCode::SPACE, KeyCode::SHIFT_L</autogen>

      <block>
          <lastpressedphysicalkey_only>KeyCode::M</lastpressedphysicalkey_only>
          <elapsedtimesincelastpressed_lessthan>Millisecond::RawValue::200</elapsedtimesincelastpressed_lessthan>
          <autogen>
              __KeyToKey__
              KeyCode::M,
              KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L,
              KeyCode::CURSOR_DOWN, ModifierFlag::SHIFT_L,
              KeyCode::C, ModifierFlag::COMMAND_L
          </autogen>
      </block>
      <autogen>
          __KeyToKey__
          KeyCode::M,
          KeyCode::C, ModifierFlag::COMMAND_L
      </autogen>

      <autogen>
          __KeyToKey__
          KeyCode::COMMA,
          KeyCode::V, ModifierFlag::COMMAND_L
      </autogen>

      <autogen>
          __KeyToKey__
          KeyCode::I,
          KeyCode::BRACKET_LEFT,  ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
          __KeyToKey__
          KeyCode::O,
          KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L
      </autogen>

      <autogen>
          __KeyToKey__
          KeyCode::U,
          KeyCode::KEY_1, ModifierFlag::COMMAND_L
      </autogen>
      <autogen>
          __KeyToKey__
          KeyCode::P,
          KeyCode::KEY_9, ModifierFlag::COMMAND_L
      </autogen>
  </item>
  <item>
      <name>Simultaneous Key Presses [S+D] turns on "(S)uper (D)uper mode"</name>
      <identifier>remap.com_jasonrudolph_simultaneouskeypresses_vimode_sd</identifier>
      <autogen>
          __SimultaneousKeyPresses__
          KeyCode::D, KeyCode::S,
          KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_com_jasonrudolph_simultaneouskeypresses_vimode
      </autogen>
  </item>
  <item><name>──────────────────────────────</name></item>
  <item>
      <name>[Option] Use A+J/K to move to previous/next channel in Slack</name>
      <identifier>com.jasonrudolph.simultaneouskeypresses_vimode.option.slack_jk</identifier>
  </item>
  </item>

  <item>
      <name>SizeUp Mode</name>
      <item>
          <name>Control SizeUp using keyboard shortcuts that are on the home row, or very close to it.</name>
          <appendix>Use Control+S to turn on SizeUp mode. Then, use any shortcut below to perform a SizeUp action.</appendix>
          <appendix>For example, to send the window left, hit Control+S, and then H.</appendix>
          <appendix>---</appendix>
          <appendix>Note: These settings assume that SizeUp is configured with its default keyboard shortcuts.</appendix>
          <appendix>Before enabling this mode, you should click "Restore Defaults" in SizeUp's Shortcuts tab.</appendix>
          <appendix>---</appendix>
          <identifier vk_config="true">notsave.com_jasonrudolph_sizeup_prefix_mode_core</identifier>
          <autogen>__ShowStatusMessage__ SizeUp Mode (Control-s)</autogen>

          <appendix>- Use H/J/K/L to send window left/down/up/right</appendix>
          <autogen>
              __KeyToKey__
              KeyCode::H, ModifierFlag::NONE,
              KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_sizeup_prefix_mode_core
          </autogen>
          <autogen>
              __KeyToKey__
              KeyCode::J, ModifierFlag::NONE,
              KeyCode::CURSOR_DOWN, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_sizeup_prefix_mode_core
          </autogen>
          <autogen>
              __KeyToKey__
              KeyCode::K, ModifierFlag::NONE,
              KeyCode::CURSOR_UP, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_sizeup_prefix_mode_core
          </autogen>
          <autogen>
              __KeyToKey__
              KeyCode::L, ModifierFlag::NONE,
              KeyCode::CURSOR_RIGHT, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_sizeup_prefix_mode_core
          </autogen>

          <appendix>- Use I to send window upper right</appendix>
          <autogen>
              __KeyToKey__
              KeyCode::I, ModifierFlag::NONE,
              KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_sizeup_prefix_mode_core
          </autogen>

          <appendix>- Use O to send window upper right</appendix>
          <autogen>
              __KeyToKey__
              KeyCode::O, ModifierFlag::NONE,
              KeyCode::CURSOR_UP, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_sizeup_prefix_mode_core
          </autogen>

          <appendix>- Use , to send window lower left</appendix>
          <autogen>
              __KeyToKey__
              KeyCode::COMMA, ModifierFlag::NONE,
              KeyCode::CURSOR_DOWN, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_sizeup_prefix_mode_core
          </autogen>

          <appendix>- Use . to send window lower right</appendix>
          <autogen>
              __KeyToKey__
              KeyCode::DOT, ModifierFlag::NONE,
              KeyCode::CURSOR_RIGHT, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_sizeup_prefix_mode_core
          </autogen>

          <appendix>- Use Space to send window center</appendix>
          <autogen>
              __KeyToKey__
              KeyCode::SPACE, ModifierFlag::NONE,
              KeyCode::C, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_sizeup_prefix_mode_core
          </autogen>

          <appendix>- Use Return to make window full screen</appendix>
          <autogen>
              __KeyToKey__
              KeyCode::RETURN, ModifierFlag::NONE,
              KeyCode::M, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_sizeup_prefix_mode_core
          </autogen>

          <appendix>- Use Control+H to send window to the previous monitor</appendix>
          <autogen>
              __KeyToKey__
              KeyCode::H, ModifierFlag::CONTROL_L | ModifierFlag::NONE,
              KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_sizeup_prefix_mode_core,
              Option::NOREPEAT
          </autogen>

          <appendix>- Use Control+L to send window to the next monitor</appendix>
          <autogen>
              __KeyToKey__
              KeyCode::L, ModifierFlag::CONTROL_L | ModifierFlag::NONE,
              KeyCode::CURSOR_RIGHT, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_sizeup_prefix_mode_core,
              Option::NOREPEAT
          </autogen>

          <appendix>- Use Control+S to turn off SizeUp Mode</appendix>
          <autogen>
              __KeyToKey__
              KeyCode::S, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::NONE,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_sizeup_prefix_mode_core
          </autogen>
      </item>
      <item>
          <name>Control+S turns on SizeUp mode</name>
          <identifier>option.com_jasonrudolph_sizeup_prefix_mode</identifier>
          <autogen>
              __KeyToKey__
              KeyCode::S, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::NONE,
              KeyCode::VK_CONFIG_FORCE_ON_notsave_com_jasonrudolph_sizeup_prefix_mode_core
          </autogen>
      </item>
  </item>

  <vkopenurldef>
      <name>KeyCode::VK_OPEN_URL_SHELL_markdown_em</name>
      <url type="shell">
          <![CDATA[
          {{ VERIFY_AND_EXECUTE_EXTENSION }} {{ KEYBOARD_KARABINER_EXT_PATH }}/wrap_selected_text "*"
          ]]>
      </url>
  </vkopenurldef>
  <vkopenurldef>
      <name>KeyCode::VK_OPEN_URL_SHELL_markdown_strong</name>
      <url type="shell">
          <![CDATA[
          {{ VERIFY_AND_EXECUTE_EXTENSION }} {{ KEYBOARD_KARABINER_EXT_PATH }}/wrap_selected_text "**"
          ]]>
      </url>
  </vkopenurldef>
  <vkopenurldef>
      <name>KeyCode::VK_OPEN_URL_SHELL_markdown_strikethrough</name>
      <url type="shell">
          <![CDATA[
          {{ VERIFY_AND_EXECUTE_EXTENSION }} {{ KEYBOARD_KARABINER_EXT_PATH }}/wrap_selected_text "~~"
          ]]>
      </url>
  </vkopenurldef>
  <vkopenurldef>
      <name>KeyCode::VK_OPEN_URL_SHELL_markdown_inline_link</name>
      <url type="shell">
          <![CDATA[
          {{ VERIFY_AND_EXECUTE_EXTENSION }} {{ KEYBOARD_KARABINER_EXT_PATH }}/markdown_inline_link
          ]]>
      </url>
  </vkopenurldef>
  <vkopenurldef>
      <name>KeyCode::VK_OPEN_URL_SHELL_markdown_reference_link_label_1</name>
      <url type="shell">
          <![CDATA[
          {{ VERIFY_AND_EXECUTE_EXTENSION }} {{ KEYBOARD_KARABINER_EXT_PATH }}/markdown_reference_link "1"
          ]]>
      </url>
  </vkopenurldef>
  <vkopenurldef>
      <name>KeyCode::VK_OPEN_URL_SHELL_markdown_reference_link_label_2</name>
      <url type="shell">
          <![CDATA[
          {{ VERIFY_AND_EXECUTE_EXTENSION }} {{ KEYBOARD_KARABINER_EXT_PATH }}/markdown_reference_link "2"
          ]]>
      </url>
  </vkopenurldef>
  <vkopenurldef>
      <name>KeyCode::VK_OPEN_URL_SHELL_markdown_reference_link_label_3</name>
      <url type="shell">
          <![CDATA[
          {{ VERIFY_AND_EXECUTE_EXTENSION }} {{ KEYBOARD_KARABINER_EXT_PATH }}/markdown_reference_link "3"
          ]]>
      </url>
  </vkopenurldef>
  <vkopenurldef>
      <name>KeyCode::VK_OPEN_URL_SHELL_markdown_reference_link_label_4</name>
      <url type="shell">
          <![CDATA[
          {{ VERIFY_AND_EXECUTE_EXTENSION }} {{ KEYBOARD_KARABINER_EXT_PATH }}/markdown_reference_link "4"
          ]]>
      </url>
  </vkopenurldef>

  <item>
      <name>Markdown Mode</name>
      <item>
          <name>Perform common Markdown-formatting tasks anywhere that you're editing text.</name>
          <appendix>Use Control+M to turn on Markdown mode. Then, use any shortcut to perform an action.</appendix>
          <appendix>For example, to wrap the selected text in double asterisks, hit Control+M, and then B.</appendix>
          <appendix>---</appendix>
          <identifier vk_config="true">notsave.com_jasonrudolph_markdown_prefix_mode_core</identifier>
          <autogen>__ShowStatusMessage__ Markdown Mode (Control-m)</autogen>

          <appendix>- Use I to wrap the currently-selected text in single asterisks ("I" for "Italic")</appendix>
          <appendix>:    Example => *selection*</appendix>
          <autogen>
              __KeyToKey__
              KeyCode::I, ModifierFlag::NONE,
              KeyCode::VK_OPEN_URL_SHELL_markdown_em,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_markdown_prefix_mode_core,
          </autogen>

          <appendix>- Use B to wrap the currently-selected text in double asterisks ("B" for "Bold")</appendix>
          <appendix>:    Example => **selection**</appendix>
          <autogen>
              __KeyToKey__
              KeyCode::B, ModifierFlag::NONE,
              KeyCode::VK_OPEN_URL_SHELL_markdown_strong,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_markdown_prefix_mode_core,
          </autogen>

          <appendix>- Use S to wrap the currently-selected text in double tildas ("S" for "Strikethrough")</appendix>
          <appendix>:    Example => ~~selection~~</appendix>
          <autogen>
              __KeyToKey__
              KeyCode::S, ModifierFlag::NONE,
              KeyCode::VK_OPEN_URL_SHELL_markdown_strikethrough,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_markdown_prefix_mode_core,
          </autogen>

          <appendix>- Use L to convert the currently-selected text to an inline link, using a URL from the clipboard</appendix>
          <appendix>:    Example => [selection](clipboard)</appendix>
          <autogen>
              __KeyToKey__
              KeyCode::L, ModifierFlag::NONE,
              KeyCode::VK_OPEN_URL_SHELL_markdown_inline_link,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_markdown_prefix_mode_core,
          </autogen>

          <appendix>- Use 1 to convert the currently-selected text to a reference link, using a URL from the clipboard</appendix>
          <appendix>:    Also works with 2, 3, or 4</appendix>
          <appendix>:    Example => [selection][1]</appendix>
          <autogen>
              __KeyToKey__
              KeyCode::KEY_1, ModifierFlag::NONE,
              KeyCode::VK_OPEN_URL_SHELL_markdown_reference_link_label_1,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_markdown_prefix_mode_core,
          </autogen>
          <autogen>
              __KeyToKey__
              KeyCode::KEY_2, ModifierFlag::NONE,
              KeyCode::VK_OPEN_URL_SHELL_markdown_reference_link_label_2,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_markdown_prefix_mode_core,
          </autogen>
          <autogen>
              __KeyToKey__
              KeyCode::KEY_3, ModifierFlag::NONE,
              KeyCode::VK_OPEN_URL_SHELL_markdown_reference_link_label_3,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_markdown_prefix_mode_core,
          </autogen>
          <autogen>
              __KeyToKey__
              KeyCode::KEY_4, ModifierFlag::NONE,
              KeyCode::VK_OPEN_URL_SHELL_markdown_reference_link_label_4,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_markdown_prefix_mode_core,
          </autogen>

          <appendix>- Use Control+M to turn off Markdown Mode</appendix>
          <autogen>
              __KeyToKey__
              KeyCode::M, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::NONE,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_com_jasonrudolph_markdown_prefix_mode_core
          </autogen>
      </item>
      <item>
          <name>Control+M turns on Markdown mode</name>
          <identifier>option.com_jasonrudolph_markdown_prefix_mode</identifier>
          <autogen>
              __KeyToKey__
              KeyCode::M, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::NONE,
              KeyCode::VK_CONFIG_FORCE_ON_notsave_com_jasonrudolph_markdown_prefix_mode_core
          </autogen>
      </item>
  </item>
  <item>
      <name>Remap Left Control to Hyper</name>
      <appendix>OS X doesn't have a Hyper. This maps Left Control to Control + Shift + Option + Command.</appendix>

      <identifier>space_cadet.left_control_to_hyper</identifier>

      <autogen>
          --KeyToKey--
          KeyCode::F19,

          KeyCode::COMMAND_L,
          ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
      </autogen>
  </item>
</root>
